package HandlingFile;
import java.util.*;
import java.io.*;

class Employee implements Serializable{
	int eno;
	String eName;
	int Salary;
	
	Employee(int eno, String eName,int Salary){
		this.eno=eno;
		this.eName=eName;
		this.Salary=Salary;
	}
	public String toString(){
		return eno+" "+eName+" "+Salary;
	}
}
class EmployeeDemo {
	public static void main(String[] args)throws Exception {
		int choice= -1;
		Scanner s=new Scanner(System.in);
		Scanner s1=new Scanner(System.in);
		File file=new File("employee.txt");
		ArrayList<Employee> al=new ArrayList<Employee>();
		ObjectOutputStream oos=null;
		ObjectInputStream ois=null;
		ListIterator li=null; 
		
		if(file.isFile()){
			ois = new ObjectInputStream(new FileInputStream(file));
			al = (ArrayList<Employee>)ois.readObject();
			ois.close();
		}
		do{
			System.out.println("1. Insert:");
			System.out.println("2. Display:");
			System.out.println("3. Search:");
			System.out.println("4. Delete:");
			System.out.println("5. Update:");
			System.out.println("6. Sort by Employee- on screen:");
			System.out.println("7. Sort by Employee- on File:");
			System.out.println("0. Exit:");
			
			System.out.println("Enter your Choice");
			choice = s.nextInt();
			
			switch(choice){
			case 1:
				System.out.println("Enter how many Employee you want:");
				int n=s.nextInt();
				for(int i=0;i<n;i++){
					
				System.out.print("Enter Employee number:");
				int eno=s.nextInt();
				
				System.out.print("Enter Employee Name:");
				String eName=s1.nextLine();
				
				System.out.print("Enter Employee Salary:");
				int Salary=s.nextInt();
				
				al.add(new Employee(eno,eName,Salary));
				
				}
				oos=new ObjectOutputStream(new FileOutputStream(file));
				oos.writeObject(al);
				oos.close();
				
			break;
			case 2:
				if(file.isFile()){
					ois = new ObjectInputStream(new FileInputStream(file));
					al = (ArrayList<Employee>)ois.readObject();
					ois.close();
				System.out.println("----------------------------------------------------");
				li= al.listIterator();
				while(li.hasNext())
					System.out.println(li.next());
					System.out.println("----------------------------------------------------");
				}else
				{
					System.out.println("File not Exists...!");
				}
			break;	
			case 3:
				if(file.isFile()){
					ois = new ObjectInputStream(new FileInputStream(file));
					al = (ArrayList<Employee>)ois.readObject();
					ois.close(); 
					
					boolean found=false;
					System.out.println("Enter eno to search the record");
					int eno =s.nextInt();
					System.out.println("----------------------------------------------------");
					li= al.listIterator();
					while(li.hasNext()){
						Employee e=(Employee)li.next();
						if(e.eno==eno){
							System.out.println(e);
							found=true;
						}	
					}
					if(!found)
						System.out.println("Record not found....!");
					
					System.out.println("----------------------------------------------------");
				}else{
					System.out.println("File not Exists....!");
				}
			break;
			case 4:
				if(file.isFile()){
					ois = new ObjectInputStream(new FileInputStream(file));
					al = (ArrayList<Employee>)ois.readObject();
					ois.close(); 
					
					boolean found=false;
					System.out.println("Enter eno to Delete the record");
					int eno =s.nextInt();
					System.out.println("----------------------------------------------------");
					li= al.listIterator();
					while(li.hasNext()){
						Employee e=(Employee)li.next();
						if(e.eno==eno){
							li.remove();
							found=true;
						}	
					}
					if(found){
						oos = new ObjectOutputStream(new FileOutputStream(file));
					oos.writeObject(al);
					oos.close();
					System.out.println("Record deleted successfully");
					}
					else{
						System.out.println("Record not found....!");	
					}
					
					System.out.println("----------------------------------------------------");
				}else{
					System.out.println("File not Exists....!");
				}
			break;
			case 5:
				if(file.isFile()){
					ois = new ObjectInputStream(new FileInputStream(file));
					al = (ArrayList<Employee>)ois.readObject();
					ois.close(); 
					
					boolean found=false;
					System.out.println("Enter eno to Update the record");
					int eno =s.nextInt();
					System.out.println("----------------------------------------------------");
					li= al.listIterator();
					while(li.hasNext()){
						Employee e=(Employee)li.next();
						if(e.eno==eno){
							System.out.println("Enter new Employee number");
							eno=s.nextInt();
							
							System.out.println("Enter new Employee Name");
							String eName=s1.nextLine();
							
							System.out.println("Enter new Employee Salary");
							int Salary=s.nextInt();
							
							li.set(new Employee(eno,eName,Salary));
							
							found=true;
						}	
					}
					if(found){
						oos = new ObjectOutputStream(new FileOutputStream(file));
					oos.writeObject(al);
					oos.close();
					System.out.println("Record Updated successfully");
					}
					else{
						System.out.println("Record not found....!");	
					}
					
					System.out.println("----------------------------------------------------");
				}else{
					System.out.println("File not Exists....!");
				}
			break;
			case 6:
				if(file.isFile()){
					ois = new ObjectInputStream(new FileInputStream(file));
					al = (ArrayList<Employee>)ois.readObject();
					ois.close();
					Collections.sort(al, new Comparator<Employee>(){
						public int compare(Employee e1,Employee e2){
							return e1.eno - e2.eno;
						}
					});
					System.out.println("----------------------------------------------------");
					li= al.listIterator();
					while(li.hasNext())
						System.out.println(li.next());
						System.out.println("----------------------------------------------------");
				}else
				{
					System.out.println("File not Exists...!");
				}
			break;
			case 7:
				if(file.isFile()){
					ois = new ObjectInputStream(new FileInputStream(file));
					al = (ArrayList<Employee>)ois.readObject();
					ois.close();
					Collections.sort(al, new Comparator<Employee>(){
						public int compare(Employee e1,Employee e2){
							return e1.eno - e2.eno;
						}
					});
					oos = new ObjectOutputStream(new FileOutputStream(file));
					oos.writeObject(al);
					oos.close();
					
					System.out.println("----------------------------------------------------");
					li= al.listIterator();
					while(li.hasNext())
						System.out.println(li.next());
						System.out.println("----------------------------------------------------");
				}else
				{
					System.out.println("File not Exists...!");
				}
			break;
			}
			
		}while(choice!=0);
	       
	    }
    }

